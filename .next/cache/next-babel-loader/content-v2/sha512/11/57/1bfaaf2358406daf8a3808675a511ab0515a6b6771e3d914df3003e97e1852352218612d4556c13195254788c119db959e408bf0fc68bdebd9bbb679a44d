{"ast":null,"code":"import useSWR from \"swr\";\nexport const usePosts = posts => {\n  const {\n    data,\n    error\n  } = useSWR(`/api/posts`, {\n    initialData: posts,\n    onErrorRetry: (error, key, config, revalidate, {\n      retryCount\n    }) => {\n      console.log(\"error try\"); // Never retry on 404.\n\n      if (error.status === 404) return; // Never retry for a specific key.\n\n      if (key === \"/api/user\") return; // Only retry up to 10 times.\n\n      if (retryCount >= 10) return; // Retry after 5 seconds.\n\n      setTimeout(() => revalidate({\n        retryCount\n      }), 5000);\n    }\n  });\n  return {\n    data,\n    isLoading: !error && !data,\n    error\n  };\n};","map":{"version":3,"sources":["D:/projects/blog/hooks/usePosts.js"],"names":["useSWR","usePosts","posts","data","error","initialData","onErrorRetry","key","config","revalidate","retryCount","console","log","status","setTimeout","isLoading"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,KAAnB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBJ,MAAM,CAAE,YAAF,EAAe;AAC3CK,IAAAA,WAAW,EAAEH,KAD8B;AAG3CI,IAAAA,YAAY,EAAE,CAACF,KAAD,EAAQG,GAAR,EAAaC,MAAb,EAAqBC,UAArB,EAAiC;AAAEC,MAAAA;AAAF,KAAjC,KAAoD;AAChEC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADgE,CAEhE;;AACA,UAAIR,KAAK,CAACS,MAAN,KAAiB,GAArB,EAA0B,OAHsC,CAKhE;;AACA,UAAIN,GAAG,KAAK,WAAZ,EAAyB,OANuC,CAQhE;;AACA,UAAIG,UAAU,IAAI,EAAlB,EAAsB,OAT0C,CAWhE;;AACAI,MAAAA,UAAU,CAAC,MAAML,UAAU,CAAC;AAAEC,QAAAA;AAAF,OAAD,CAAjB,EAAmC,IAAnC,CAAV;AACD;AAhB0C,GAAf,CAA9B;AAmBA,SAAO;AACLP,IAAAA,IADK;AAELY,IAAAA,SAAS,EAAE,CAACX,KAAD,IAAU,CAACD,IAFjB;AAGLC,IAAAA;AAHK,GAAP;AAKD,CAzBM","sourcesContent":["import useSWR from \"swr\";\r\n\r\nexport const usePosts = (posts) => {\r\n  const { data, error } = useSWR(`/api/posts`, {\r\n    initialData: posts,\r\n\r\n    onErrorRetry: (error, key, config, revalidate, { retryCount }) => {\r\n      console.log(\"error try\");\r\n      // Never retry on 404.\r\n      if (error.status === 404) return;\r\n\r\n      // Never retry for a specific key.\r\n      if (key === \"/api/user\") return;\r\n\r\n      // Only retry up to 10 times.\r\n      if (retryCount >= 10) return;\r\n\r\n      // Retry after 5 seconds.\r\n      setTimeout(() => revalidate({ retryCount }), 5000);\r\n    },\r\n  });\r\n\r\n  return {\r\n    data,\r\n    isLoading: !error && !data,\r\n    error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}