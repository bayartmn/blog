{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\blog\\\\pages\\\\[slug].js\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Layout from \"components/layout\";\nimport { getPostBySlug, getPaginetedPosts } from \"lib/api\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport HiglightCode from \"components/higlight-code\";\nimport { urlFor } from \"lib/api\";\nimport PostHeader from \"components/post-header\";\nimport { useRouter } from \"next/router\";\nexport default (({\n  post,\n  preview\n}) => {\n  const router = useRouter();\n  if (router.isFallback) return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0422\\u04AF\\u0440 \\u0445\\u04AF\\u043B\\u044D\\u044D\\u043D\\u044D \\u04AF\\u04AF ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n  if (!router.isFallback && !(post !== null && post !== void 0 && post.slug)) return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0423\\u0443\\u0447\\u043B\\u0430\\u0430\\u0440\\u0430\\u0439 \\u0438\\u0439\\u043C \\u043F\\u043E\\u0441\\u0442 \\u0431\\u0430\\u0439\\u0445\\u0433\\u04AF\\u0439 \\u0431\\u0430\\u0439\\u043D\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"12\",\n        children: [preview && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0422\\u0430 preview \\u0433\\u043E\\u0440\\u0438\\u043C\\u0434 \\u0431\\u0430\\u0439\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostHeader, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BlockContent, {\n          blocks: post.content,\n          serializers: serializers,\n          imageOptions: {\n            w: 320,\n            h: 240,\n            fit: \"max\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n});\nconst serializers = {\n  types: {\n    code: props => /*#__PURE__*/_jsxDEV(HiglightCode, {\n      language: props.node.language,\n      children: [props.node.code, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-filename\",\n        children: props.node.filename\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this),\n    image: props => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `blog-image blog-image-${props.node.position}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: urlFor(props.node).height(600).url()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-filename\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: props.node.alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }\n};\nexport const getStaticProps = async ({\n  params,\n  preview = false,\n  previewData\n}) => {\n  const post = await getPostBySlug(params.slug, preview);\n  console.log(\"------------\", post);\n  return {\n    props: {\n      post: post.length > 1 ? post[1] : post.length > 0 ? post[0] : {},\n      preview\n    },\n    revalidate: 6000\n  };\n};\nexport const getStaticPaths = async () => {\n  const posts = await getPaginetedPosts(0, 4);\n  return {\n    paths: posts.map(post => ({\n      params: {\n        slug: post.slug\n      }\n    })),\n    fallback: true\n  };\n};","map":{"version":3,"sources":["D:/projects/blog/pages/[slug].js"],"names":["Row","Col","Layout","getPostBySlug","getPaginetedPosts","BlockContent","HiglightCode","urlFor","PostHeader","useRouter","post","preview","router","isFallback","slug","content","serializers","w","h","fit","types","code","props","node","language","filename","image","position","height","url","textAlign","alt","getStaticProps","params","previewData","console","log","length","revalidate","getStaticPaths","posts","paths","map","fallback"],"mappings":"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","sourcesContent":["import { Row, Col } from \"react-bootstrap\";\r\nimport Layout from \"components/layout\";\r\nimport { getPostBySlug, getPaginetedPosts } from \"lib/api\";\r\nimport BlockContent from \"@sanity/block-content-to-react\";\r\nimport HiglightCode from \"components/higlight-code\";\r\nimport { urlFor } from \"lib/api\";\r\nimport PostHeader from \"components/post-header\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport default ({ post, preview }) => {\r\n  const router = useRouter();\r\n  if (router.isFallback)\r\n    return (\r\n      <Layout>\r\n        <div>Түр хүлээнэ үү ...</div>\r\n      </Layout>\r\n    );\r\n\r\n  if (!router.isFallback && !post?.slug)\r\n    return (\r\n      <Layout>\r\n        <div>Уучлаарай ийм пост байхгүй байна...</div>\r\n      </Layout>\r\n    );\r\n\r\n  return (\r\n    <Layout>\r\n      <Row>\r\n        <Col md=\"12\">\r\n          {preview && <div>Та preview горимд байна</div>}\r\n          <pre>{/*JSON.stringify(post, null, 2)*/}</pre>\r\n          <PostHeader post={post} />\r\n          <br />\r\n          <BlockContent\r\n            blocks={post.content}\r\n            serializers={serializers}\r\n            imageOptions={{ w: 320, h: 240, fit: \"max\" }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst serializers = {\r\n  types: {\r\n    code: (props) => (\r\n      <HiglightCode language={props.node.language}>\r\n        {props.node.code}\r\n        <div className=\"code-filename\">{props.node.filename}</div>\r\n      </HiglightCode>\r\n    ),\r\n    image: (props) => (\r\n      <div className={`blog-image blog-image-${props.node.position}`}>\r\n        <img src={urlFor(props.node).height(600).url()} />\r\n        <div className=\"code-filename\" style={{ textAlign: \"center\" }}>\r\n          {props.node.alt}\r\n        </div>\r\n      </div>\r\n    ),\r\n  },\r\n};\r\n\r\nexport const getStaticProps = async ({\r\n  params,\r\n  preview = false,\r\n  previewData,\r\n}) => {\r\n  const post = await getPostBySlug(params.slug, preview);\r\n\r\n  console.log(\"------------\", post);\r\n  return {\r\n    props: {\r\n      post: post.length > 1 ? post[1] : post.length > 0 ? post[0] : {},\r\n      preview,\r\n    },\r\n    revalidate: 6000,\r\n  };\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const posts = await getPaginetedPosts(0, 4);\r\n  return {\r\n    paths: posts.map((post) => ({\r\n      params: {\r\n        slug: post.slug,\r\n      },\r\n    })),\r\n    fallback: true,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}