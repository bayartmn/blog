{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\blog\\\\pages\\\\[slug].js\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Layout from \"components/layout\";\nimport { getPostBySlug, getAllPosts } from \"lib/api\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport HiglightCode from \"components/higlight-code\";\nimport { urlFor } from \"lib/api\";\nimport PostHeader from \"components/post-header\";\nconst serializers = {\n  types: {\n    code: props => /*#__PURE__*/_jsxDEV(HiglightCode, {\n      language: props.node.language,\n      children: [props.node.code, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-filename\",\n        children: props.node.filename\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this),\n    image: props => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `blog-image blog-image-${props.node.position}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: urlFor(props.node).height(400).url()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-filename\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: props.node.alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }\n};\nexport default (({\n  post\n}) => {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostHeader, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BlockContent, {\n          blocks: post.content,\n          serializers: serializers,\n          imageOptions: {\n            w: 320,\n            h: 240,\n            fit: \"max\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n});\nexport const getStaticProps = async ({\n  params\n}) => {\n  const post = await getPostBySlug(params.slug);\n  return {\n    props: {\n      post: post[0]\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const posts = await getAllPosts();\n  return {\n    paths: posts.map(post => ({\n      params: {\n        slug: post.slug\n      }\n    })),\n    fallback: false\n  };\n};","map":{"version":3,"sources":["D:/projects/blog/pages/[slug].js"],"names":["Row","Col","Layout","getPostBySlug","getAllPosts","BlockContent","HiglightCode","urlFor","PostHeader","serializers","types","code","props","node","language","filename","image","position","height","url","textAlign","alt","post","content","w","h","fit","getStaticProps","params","slug","getStaticPaths","posts","paths","map","fallback"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,SAA3C;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,MAAT,QAAuB,SAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAGC,KAAD,iBACJ,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEA,KAAK,CAACC,IAAN,CAAWC,QAAnC;AAAA,iBACGF,KAAK,CAACC,IAAN,CAAWF,IADd,eAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAAgCC,KAAK,CAACC,IAAN,CAAWE;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG;AAOLC,IAAAA,KAAK,EAAGJ,KAAD,iBACL;AAAK,MAAA,SAAS,EAAG,yBAAwBA,KAAK,CAACC,IAAN,CAAWI,QAAS,EAA7D;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEV,MAAM,CAACK,KAAK,CAACC,IAAP,CAAN,CAAmBK,MAAnB,CAA0B,GAA1B,EAA+BC,GAA/B;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAtC;AAAA,kBACGR,KAAK,CAACC,IAAN,CAAWQ;AADd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AARG;AADW,CAApB;AAmBA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC3B,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,YAAD;AACE,UAAA,MAAM,EAAEA,IAAI,CAACC,OADf;AAEE,UAAA,WAAW,EAAEd,WAFf;AAGE,UAAA,YAAY,EAAE;AAAEe,YAAAA,CAAC,EAAE,GAAL;AAAUC,YAAAA,CAAC,EAAE,GAAb;AAAkBC,YAAAA,GAAG,EAAE;AAAvB;AAHhB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;AAmBA,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAsB;AAClD,QAAMN,IAAI,GAAG,MAAMnB,aAAa,CAACyB,MAAM,CAACC,IAAR,CAAhC;AACA,SAAO;AACLjB,IAAAA,KAAK,EAAE;AACLU,MAAAA,IAAI,EAAEA,IAAI,CAAC,CAAD;AADL;AADF,GAAP;AAKD,CAPM;AASP,OAAO,MAAMQ,cAAc,GAAG,YAAY;AACxC,QAAMC,KAAK,GAAG,MAAM3B,WAAW,EAA/B;AACA,SAAO;AACL4B,IAAAA,KAAK,EAAED,KAAK,CAACE,GAAN,CAAWX,IAAD,KAAW;AAC1BM,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAEP,IAAI,CAACO;AADL;AADkB,KAAX,CAAV,CADF;AAMLK,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD,CAVM","sourcesContent":["import { Row, Col } from \"react-bootstrap\";\r\nimport Layout from \"components/layout\";\r\nimport { getPostBySlug, getAllPosts } from \"lib/api\";\r\nimport BlockContent from \"@sanity/block-content-to-react\";\r\nimport HiglightCode from \"components/higlight-code\";\r\nimport { urlFor } from \"lib/api\";\r\nimport PostHeader from \"components/post-header\";\r\n\r\nconst serializers = {\r\n  types: {\r\n    code: (props) => (\r\n      <HiglightCode language={props.node.language}>\r\n        {props.node.code}\r\n        <div className=\"code-filename\">{props.node.filename}</div>\r\n      </HiglightCode>\r\n    ),\r\n    image: (props) => (\r\n      <div className={`blog-image blog-image-${props.node.position}`}>\r\n        <img src={urlFor(props.node).height(400).url()} />\r\n        <div className=\"code-filename\" style={{ textAlign: \"center\" }}>\r\n          {props.node.alt}\r\n        </div>\r\n      </div>\r\n    ),\r\n  },\r\n};\r\n\r\nexport default ({ post }) => {\r\n  return (\r\n    <Layout>\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <pre>{/*JSON.stringify(post, null, 2)*/}</pre>\r\n          <PostHeader post={post} />\r\n          <br />\r\n          <BlockContent\r\n            blocks={post.content}\r\n            serializers={serializers}\r\n            imageOptions={{ w: 320, h: 240, fit: \"max\" }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const getStaticProps = async ({ params }) => {\r\n  const post = await getPostBySlug(params.slug);\r\n  return {\r\n    props: {\r\n      post: post[0],\r\n    },\r\n  };\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const posts = await getAllPosts();\r\n  return {\r\n    paths: posts.map((post) => ({\r\n      params: {\r\n        slug: post.slug,\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}